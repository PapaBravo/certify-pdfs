@startuml certifier-deployment

!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesRs.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml
!includeurl KubernetesPuml/OSS/KubernetesJob.puml
!includeurl KubernetesPuml/OSS/KubernetesSecret.puml
!includeurl KubernetesPuml/OSS/KubernetesHpa.puml
!includeurl KubernetesPuml/OSS/KubernetesSts.puml

skinparam nodesep 10
skinparam ranksep 10

actor "User" as user
actor "External\nApplication" as extApp
left to right direction

Cluster_Boundary(cluster, "MikroK8s") {
    Namespace_Boundary(ns_default, "default") {
        KubernetesSvc(svc, "service", "")
        KubernetesPod(pod_api, "api", "")
        KubernetesPod(pod_client, "client", "")
        KubernetesPod(pod_renderer, "renderer", "")
        
        ' frame chart_minio as "minio chart" {
            KubernetesPod(pod_minio, "minio", "")
            ' KubernetesSts(sts_minio, "minio", "")
            ' KubernetesSecret(secret_minio_credentials, "credentials","")
        ' }
        
        KubernetesJob(job_minio, "minio post install", "")
        
        ' frame chart_redis as "redis chart" {
            KubernetesPod(pod_redis, "redis", "")
        '     KubernetesSts(sts_redis, "redis", "")
        '     KubernetesSecret(secret_redis_credentials, "credentials","")
        ' }
    }

    Namespace_Boundary(ns_kubespace, "kubespace") {
        KubernetesSvc(svc_elastic, "elastic", "")
        KubernetesSvc(svc_registry, "registry", "")

    }
}

' Cluster_Boundary(cluster, "Kubernetes Cluster") {
'     Namespace_Boundary(ns, "Back End") {
'         KubernetesIng(ingress, "your.domain.com", "")
'         KubernetesSvc(svc, "service", "")
'         KubernetesPod(pod1, "pod1", "")
'         KubernetesPod(pod2, "pod2", "")
'         KubernetesPod(pod3, "pod3", "")

'         KubernetesRs(rs,"","")
'         KubernetesDeploy(deploy,"deployment","")
'         KubernetesHpa(hpa, "HPA", "")
'     }
' }

' Rel(userAlias,ingress," ")
' Rel(ingress,svc," ")

Rel(user, svc, "Access GUI\nlocalhost:8080")
Rel(user, svc, "Access results\nlocalhost:9000")
Rel(user, svc, "Access API (via GUI)\nlocalhost:8081")
Rel(extApp, svc, "Access API\nlocalhost:8081")

Rel(svc,pod_api, "Forward API\n8081:80")
Rel(svc,pod_client, "Forward GUI\n8080:80")
Rel(svc,pod_minio, "Forward results\n9000:9000")

Rel(job_minio, pod_minio, "Add templates")

Rel(pod_renderer,pod_redis,"Subscribe to Jobs")
Rel(pod_api,pod_redis,"Write Jobs")
Rel(pod_renderer,pod_redis,"Write Jobs, Results")
Rel(pod_renderer,pod_minio,"Write Results")

' Rel(svc,pod1," ")
' Rel(svc,pod2," ")
' Rel(svc,pod3," ")

' Rel_U(rs,pod1," ")
' Rel_U(rs,pod2," ")
' Rel_U(rs,pod3," ")

' Rel_U(deploy,rs, " ")
' Rel_U(hpa,deploy, " ")
@enduml