apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-api
  labels:
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    app: server
  ports:
    - port: 80
      targetPort: {{ .Values.api.port }}
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}-api
          image: {{ .Values.registry.url }}/certify-api
          ports:
            - name: http
              containerPort: {{ .Values.api.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: PORT
              value: "{{ .Values.api.port }}"
            - name: ORIGINS
              value: "http://localhost:{{ .Values.client.port }}"
            - name: REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
            - name: SIGN_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-signing
                  key: SIGN_PUBLIC_KEY
          imagePullPolicy: Always